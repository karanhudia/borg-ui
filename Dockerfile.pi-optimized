# Optimized Dockerfile for Raspberry Pi
# This version reduces build time by using system packages where possible

# Build stage for frontend
FROM node:18-alpine AS frontend-builder
WORKDIR /app/frontend
COPY frontend/package*.json ./
# Use npm ci for faster, more reliable installs
RUN npm ci --only=production
COPY frontend/ .
RUN npm run build

# Production stage - Use debian packages instead of pip where possible
FROM python:3.9-slim AS production
WORKDIR /app

# Install everything in one layer to reduce build time and image size
RUN apt-get update && apt-get install -y \
    # Borg and borgmatic from system packages (faster than pip)
    borgbackup \
    borgmatic \
    # SSH tools
    openssh-client \
    sshpass \
    # System utilities
    cron \
    curl \
    # Minimal build tools for remaining pip packages
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install only our application dependencies (not borgmatic, it's already installed)
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY app/ ./app/
COPY --from=frontend-builder /app/frontend/build ./app/static

# Create necessary directories
RUN mkdir -p \
    /app/logs \
    /app/config \
    /app/data \
    /app/data/ssh_keys \
    /backups \
    /var/log/borgmatic \
    /etc/borgmatic

# Create non-root user
RUN groupadd -g 1001 borgmatic && \
    useradd -m -u 1001 -g 1001 -s /bin/bash borgmatic && \
    chown -R borgmatic:borgmatic /app /backups /var/log/borgmatic /etc/borgmatic && \
    chmod 700 /app/data/ssh_keys

# Create startup script
RUN echo '#!/bin/bash\n\
cd /app\n\
exec gunicorn app.main:app --bind 0.0.0.0:8000 --workers 1 --worker-class uvicorn.workers.UvicornWorker\n\
' > /app/start.sh && \
    chmod +x /app/start.sh && \
    chown borgmatic:borgmatic /app/start.sh

USER borgmatic

ENV PYTHONPATH=/app
ENV BORGMATIC_CONFIG_PATH=/app/config/borgmatic.yaml
ENV BORGMATIC_BACKUP_PATH=/backups

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/health/system || exit 1

CMD ["/app/start.sh"]
