services:
  borgmatic-ui:
    # Use pre-built image from Docker Hub (RECOMMENDED - instant startup!)
    # Replace 'ainullcode' with your actual Docker Hub username if different
    # image: ${DOCKER_IMAGE:-ainullcode/borgmatic-ui:latest}

    # OR build locally (only for development - takes 20-40 mins on Pi)
    # Uncomment the line below and comment out 'image' above to build locally:
    build: .

    container_name: borgmatic-web-ui
    
    # Portainer-friendly labels
    labels:
      - "com.docker.compose.project=borgmatic-ui"
      - "com.docker.compose.service=borgmatic-ui"
      - "traefik.enable=true"
      - "traefik.http.routers.borgmatic-ui.rule=Host(`borgmatic.local`)"
      - "traefik.http.services.borgmatic-ui.loadbalancer.server.port=8081"

    # Port mapping
    # Note: Not needed when using network_mode: "host"
    # When using network_mode: host, app will listen on port 8081
    # ports:
    #   - "8081:8081"

    volumes:
      # Data directory - contains all persistent data (database, SSH keys, logs, configs)
      # This single volume ensures data persists across container restarts
      - ./data:/data:rw

      # Backup storage - mount to external storage or NAS
      - ./backups:/backups:rw

      # System volumes for cron and SSH
      - /etc/cron.d:/etc/cron.d:ro
      - /etc/localtime:/etc/localtime:ro

      # SSH socket forwarding (for accessing host SSH keys if needed)
      # - ~/.ssh:/root/.ssh:ro

      # Optional: Mount host directories for backup sources
      # - /path/to/backup/source:/backup-source:ro
    
    environment:
      # Application settings
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - PORT=8081
      - LOG_LEVEL=${LOG_LEVEL:-INFO}

      # Data persistence
      - DATA_DIR=/data
      - DATABASE_URL=${DATABASE_URL:-sqlite:////data/borgmatic.db}
      - BORGMATIC_CONFIG_PATH=/data/config/borgmatic.yaml
      - BORGMATIC_BACKUP_PATH=/backups

      # Security settings (⚠️ MUST set in .env file!)
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - STRICT_SECURITY=${STRICT_SECURITY:-false}

      # Cron settings
      - ENABLE_CRON_BACKUPS=${ENABLE_CRON_BACKUPS:-false}
    
    restart: unless-stopped

    # Use host network for direct access to host network interfaces
    # Allows the container to access SSH servers on the host and local network
    network_mode: "host"

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'