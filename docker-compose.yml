# Simplified Docker Compose - Zero Configuration Required!
#
# Auto-configured settings:
# - SECRET_KEY: Auto-generated on first run and persisted
# - DATABASE_URL: Auto-derived from data_dir (/data)
# - BORGMATIC_CONFIG_PATH: Auto-derived from data_dir
# - LOG_LEVEL: Defaults to INFO
#
# Users configure backup repositories in borgmatic config (local or SSH)
# No need for borg_backups volume - repositories can be anywhere!

version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - APP_VERSION=${APP_VERSION:-local-dev}
    container_name: borgmatic-web-ui
    restart: unless-stopped

    ports:
      - "${PORT:-8081}:8081"

    volumes:
      # Single data volume for all persistent data
      - borg_data:/data:rw

      # System volumes (read-only)
      - /etc/cron.d:/etc/cron.d:ro
      - /etc/localtime:/etc/localtime:ro

      # Host filesystem mount for local-style repository access
      # Maps your host machine's directories into the container at /local
      # Default: /Users (macOS) - customize via LOCAL_STORAGE_PATH in .env
      # Create repositories at /local/your-username/backups/repo-name
      - ${LOCAL_STORAGE_PATH:-/Users}:/local:rw

    environment:
      # Optional overrides (all have smart defaults)
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - PORT=${PORT:-8081}
      # Uncomment to override defaults:
      # - SECRET_KEY=your-custom-secret-key
      # - LOG_LEVEL=DEBUG

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    networks:
      - borg_network

networks:
  borg_network:
    name: borg_network
    driver: bridge

# Single volume for all persistent data
volumes:
  borg_data:
    name: borg_data
    driver: local
    # Optional: Mount to custom location on host
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: /mnt/storage/borg-data
