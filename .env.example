# Borgmatic Web UI - Environment Configuration
# Copy this file to .env and customize as needed

# =============================================================================
# Application Settings
# =============================================================================

# Port for the web UI (default: 8081)
PORT=8081

# Environment mode (production/development)
ENVIRONMENT=production

# Application version (auto-generated in CI/CD, use for local dev)
# APP_VERSION=local-dev

# =============================================================================
# User/Group ID Configuration (for file permissions)
# =============================================================================

# Set these to match your host user's UID/GID for proper file permissions
# Find your UID/GID by running: id -u && id -g

# Default: 1001:1001 (works for most users)
# PUID=1001
# PGID=1001

# Common Linux user (usually 1000:1000):
# PUID=1000
# PGID=1000

# macOS user (varies, run `id -u && id -g`):
# PUID=501
# PGID=20

# =============================================================================
# Security Settings (Optional - Auto-generated if not set)
# =============================================================================

# Secret key for session management (auto-generated on first run if not set)
# SECRET_KEY=your-custom-secret-key-here

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_LEVEL=INFO

# =============================================================================
# Host Filesystem Mount
# =============================================================================

# By default, your entire host filesystem (/) is mounted to /local in the container.
# This gives you access to all directories from within the container.
# You can customize this to mount only a specific directory if preferred.

# Default (entire filesystem - already active):
# LOCAL_STORAGE_PATH=/

# Custom examples (uncomment and modify as needed):
# LOCAL_STORAGE_PATH=/Users           # Only mount user directories (macOS)
# LOCAL_STORAGE_PATH=/home            # Only mount home directories (Linux)
# LOCAL_STORAGE_PATH=/mnt/backups     # Only mount a specific backup directory

# With default (/) mapping, create repositories like:
# - macOS: /local/Users/username/backups/my-repo
# - Linux: /local/home/username/backups/my-repo
# - Anywhere: /local/path/to/your/backup/location

# =============================================================================
# Usage Notes
# =============================================================================

# Repository Types:
# - Local (Container): Repositories within the container (limited to container storage)
# - Local (Mounted): Repositories on host filesystem via /local mount (recommended)
# - SSH: Remote repositories accessed via SSH (for truly remote servers)
#
# Recommended Setup:
# 1. Set LOCAL_STORAGE_PATH to your desired host directory (e.g., /Users)
# 2. Uncomment the volume mount in docker-compose.yml
# 3. Restart container: docker-compose down && docker-compose up -d
# 4. Create "local" repositories at /local/... in the UI
# 5. Your backups will be stored on the host, surviving container rebuilds
