# Borgmatic Web UI - Environment Configuration
# Copy this file to .env and customize as needed

# =============================================================================
# Application Settings
# =============================================================================

# Port for the web UI (default: 8081)
PORT=8081

# Environment mode (production/development)
ENVIRONMENT=production

# Application version (auto-generated in CI/CD, use for local dev)
# APP_VERSION=local-dev

# =============================================================================
# Security Settings (Optional - Auto-generated if not set)
# =============================================================================

# Secret key for session management (auto-generated on first run if not set)
# SECRET_KEY=your-custom-secret-key-here

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_LEVEL=INFO

# =============================================================================
# Host Filesystem Mount (Optional)
# =============================================================================

# Mount your host machine's filesystem to access it from the container.
# This allows creating "local" repositories that actually live on your host,
# external drives, or NAS mounts.

# Example: Mount your user directory (macOS/Linux)
# LOCAL_STORAGE_PATH=/Users

# Example: Mount your home directory (Linux)
# LOCAL_STORAGE_PATH=/home

# Example: Mount a specific directory or external drive
# LOCAL_STORAGE_PATH=/mnt/external-drive

# After setting this, uncomment the volume mount in docker-compose.yml.
# Then create repositories in the UI at paths like:
# /local/your-username/backups/repo-name

# =============================================================================
# Usage Notes
# =============================================================================

# Repository Types:
# - Local (Container): Repositories within the container (limited to container storage)
# - Local (Mounted): Repositories on host filesystem via /local mount (recommended)
# - SSH: Remote repositories accessed via SSH (for truly remote servers)
#
# Recommended Setup:
# 1. Set LOCAL_STORAGE_PATH to your desired host directory (e.g., /Users)
# 2. Uncomment the volume mount in docker-compose.yml
# 3. Restart container: docker-compose down && docker-compose up -d
# 4. Create "local" repositories at /local/... in the UI
# 5. Your backups will be stored on the host, surviving container rebuilds
