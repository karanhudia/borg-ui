# ===============================================================================
# Borgmatic Web UI - Environment Configuration
# ===============================================================================
#
# QUICK START (Portainer Users):
# 1. Copy the variables below to Portainer's "Environment variables" section
# 2. Generate a SECRET_KEY: openssl rand -base64 32
# 3. Set PORT if 8081 is already in use
# 4. Done! Portainer will create volumes automatically
#
# QUICK START (Docker CLI):
# 1. Generate SECRET_KEY: openssl rand -base64 32
# 2. Run: docker run -d --name borgmatic-web-ui -p 8081:8081 \
#         -v borgmatic_data:/data -v /path/to/backups:/backups \
#         -e SECRET_KEY=your-generated-key ainullcode/borgmatic-ui:latest
#
# ===============================================================================

# ===============================================================================
# SECURITY SETTINGS (⚠️ REQUIRED!)
# ===============================================================================

# Secret key for JWT tokens and SSH key encryption
# ⚠️ CRITICAL: Generate with: openssl rand -base64 32
# ⚠️ WARNING: Changing this will invalidate all tokens and encrypted SSH keys!
SECRET_KEY=CHANGE-ME-TO-SECURE-RANDOM-STRING

# JWT Algorithm (default: HS256)
ALGORITHM=HS256

# Token expiration time in minutes (default: 30)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Strict security mode - refuses to start with insecure settings
# Recommended: false for development, true for production
STRICT_SECURITY=false

# ===============================================================================
# APPLICATION SETTINGS
# ===============================================================================

# Application environment (development|production)
ENVIRONMENT=production

# Application port (default: 8081)
# Change if port 8081 is already in use (e.g., PORT=8082)
PORT=8081

# Log level (DEBUG|INFO|WARNING|ERROR|CRITICAL)
LOG_LEVEL=INFO

# ===============================================================================
# DATA PERSISTENCE (IMPORTANT!)
# ===============================================================================

# Data directory - contains ALL persistent data
# Includes: database, SSH keys, logs, and configs
# Default: /data (Docker creates named volume automatically)
# Custom: /var/lib/borgmatic or ./data for relative path
DATA_DIR=/data

# Database URL (default: SQLite in /data directory)
# SQLite: sqlite:////data/borgmatic.db
# PostgreSQL: postgresql://user:password@host/dbname
# MySQL: mysql://user:password@host/dbname
DATABASE_URL=sqlite:////data/borgmatic.db

# ===============================================================================
# BORGMATIC CONFIGURATION
# ===============================================================================

# Borgmatic config file path (default: /data/config/borgmatic.yaml)
BORGMATIC_CONFIG_PATH=/data/config/borgmatic.yaml

# Backup destination path (mount to external storage)
BORGMATIC_BACKUP_PATH=/backups

# Enable automated cron-based backups (default: false)
ENABLE_CRON_BACKUPS=false

# ===============================================================================
# ADVANCED SETTINGS (Optional)
# ===============================================================================

# CORS Origins (comma-separated list)
# Default: * (allow all)
# Example: http://localhost:3000,https://yourdomain.com
# CORS_ORIGINS=*

# Initial admin password (only used on first startup if no admin exists)
# Default: admin123
# INITIAL_ADMIN_PASSWORD=your-secure-password

# ===============================================================================
# PORTAINER STACK EXAMPLE
# ===============================================================================
# version: '3.8'
# services:
#   borgmatic-ui:
#     image: ainullcode/borgmatic-ui:latest
#     container_name: borgmatic-web-ui
#     ports:
#       - "8081:8081"
#     volumes:
#       - borgmatic_data:/data
#       - /mnt/backups:/backups
#     environment:
#       - SECRET_KEY=${SECRET_KEY}
#       - PORT=8081
#       - DATABASE_URL=sqlite:////data/borgmatic.db
#       - LOG_LEVEL=INFO
#       - ENVIRONMENT=production
#     restart: unless-stopped
#
# volumes:
#   borgmatic_data:
#
# ===============================================================================
# DOCKER CLI EXAMPLE
# ===============================================================================
# docker run -d \
#   --name borgmatic-web-ui \
#   -p 8081:8081 \
#   -v borgmatic_data:/data \
#   -v /mnt/backups:/backups \
#   -e SECRET_KEY=$(openssl rand -base64 32) \
#   -e PORT=8081 \
#   -e LOG_LEVEL=INFO \
#   ainullcode/borgmatic-ui:latest
