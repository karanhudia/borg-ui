# Borgmatic Web UI - Environment Configuration
# Copy this file to .env and customize as needed

# =============================================================================
# Application Settings
# =============================================================================

# Port for the web UI (default: 8081)
PORT=8081

# Environment mode (production/development)
ENVIRONMENT=production

# Application version (auto-generated in CI/CD, use for local dev)
# APP_VERSION=local-dev

# =============================================================================
# Security Settings (Optional - Auto-generated if not set)
# =============================================================================

# Secret key for session management (auto-generated on first run if not set)
# SECRET_KEY=your-custom-secret-key-here

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_LEVEL=INFO

# =============================================================================
# Remote Storage Mount (Optional)
# =============================================================================

# If you want to access remote storage (e.g., Raspberry Pi, NAS) as "local"
# repositories, you can mount it to the container. Uncomment the volume mount
# in docker-compose.yml and set the path here.

# Example: Mount NFS share from Raspberry Pi
# REMOTE_STORAGE_PATH=/mnt/raspberry-pi

# Example: Mount any host directory
# REMOTE_STORAGE_PATH=/mnt/network-storage

# Then in the UI, create a "local" repository pointing to:
# /mnt/remote/your-repo-name

# =============================================================================
# Usage Notes
# =============================================================================

# Repository Types:
# - Local: Repositories within the container filesystem (fast, but limited space)
# - SSH: Remote repositories accessed via SSH (recommended for remote servers)
# - Mounted: Use local type with /mnt/remote for NFS/CIFS mounted storage
#
# For Raspberry Pi or NAS storage:
# 1. Mount the remote filesystem on your Docker host via NFS/CIFS
# 2. Uncomment the volume mount in docker-compose.yml
# 3. Set REMOTE_STORAGE_PATH to your mount point
# 4. Create "local" repositories in the UI at /mnt/remote/...
